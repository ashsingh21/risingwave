---
version: "3"
services:
  risingwave:
    image: ghcr.io/risingwavelabs/risingwave:latest
    ports:
      - 4566:4566
      - 5691:5691
    command:
      - playground
    container_name: risingwave

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2017-latest
    environment:
      SA_PASSWORD: "YourPassword123"
      ACCEPT_EULA: "Y"
    ports:
      - 1433:1433
      - 1434:1434
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourPassword123 -d master -Q 'SELECT 1'"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: sqlserver

  message_queue:
    extends:
      file: ../../docker/docker-compose.yml
      service: message_queue

  debezium:
    image: debezium/connect:1.9
    environment:
      BOOTSTRAP_SERVERS: message_queue:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://message_queue:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://message_queue:8081
    ports:
      - 8083:8083
    healthcheck:
      test: curl -f localhost:8083
      interval: 1s
      start_period: 120s
    depends_on:
      message_queue: { condition: service_healthy }
      sqlserver: { condition: service_healthy }
    container_name: debezium

  debezium_deploy:
    image: debezium/connect:1.9
    depends_on:
      debezium:
        condition: service_healthy
    volumes:
      - ./sql_server/sql_dbz.sh:/sql_dbz.sh
    entrypoint: [ bash, -c, "/sql_dbz.sh" ]
    container_name: debezium_deploy
    restart: on-failure

  prepare_sqlserver:
    image: mcr.microsoft.com/mssql/server:2017-latest
    depends_on:
      sqlserver: { condition: service_healthy }
    volumes:
      - ./sql_server/init.sql:/init.sql
      - ./sql_server/run_init.sh:/run_init.sh
    entrypoint: [ bash, -c, "/run_init.sh" ]
    container_name: prepare_sqlserver
    restart: on-failure

volumes:
  message_queue:
    external: false
